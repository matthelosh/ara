{"version":3,"file":"js/201.js","mappings":"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","sources":["webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack:///./node_modules/chart.js/dist/chart.esm.js","webpack:///./node_modules/vue-chartjs/legacy/index.js","webpack:///./resources/js/Pages/Admin/Components/DonutChart.vue?4cf9","webpack:///resources/js/Pages/Admin/Components/DonutChart.vue","webpack:///./resources/js/Pages/Admin/Components/DonutChart.vue?6558","webpack:///./resources/js/Pages/Admin/Components/DonutChart.vue"],"sourcesContent":["/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import { Chart, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nvar ChartEmits;\n(function(ChartEmits) {\n    ChartEmits[\"ChartRendered\"] = \"chart:rendered\";\n    ChartEmits[\"ChartUpdated\"] = \"chart:updated\";\n    ChartEmits[\"ChartDestroyed\"] = \"chart:destroyed\";\n    ChartEmits[\"LabelsUpdated\"] = \"labels:updated\";\n})(ChartEmits || (ChartEmits = {}));\nfunction chartCreate(createChartFunction, chartData, chartOptions, context) {\n    createChartFunction(chartData, chartOptions);\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartRendered);\n    }\n}\nfunction chartUpdate(chart, context) {\n    chart.update();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartUpdated);\n    }\n}\nfunction chartDestroy(chart, context) {\n    chart.destroy();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartDestroyed);\n    }\n}\nfunction getChartData(data, datasetIdKey) {\n    const nextData = {\n        labels: typeof data.labels === \"undefined\" ? [] : [\n            ...data.labels\n        ],\n        datasets: []\n    };\n    setChartDatasets(nextData, {\n        ...data\n    }, datasetIdKey);\n    return nextData;\n}\nfunction setChartDatasets(oldData, newData, datasetIdKey) {\n    const addedDatasets = [];\n    oldData.datasets = newData.datasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = oldData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]\n        );\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction setChartLabels(chart, labels, context) {\n    chart.data.labels = labels;\n    if (context !== undefined) {\n        context.emit(ChartEmits.LabelsUpdated);\n    }\n}\nfunction setChartOptions(chart, options) {\n    chart.options = {\n        ...options\n    };\n}\nfunction compareData(newData, oldData) {\n    // Get new and old DataSet Labels\n    const newDatasetLabels = newData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    const oldDatasetLabels = oldData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    // Check if Labels are equal and if dataset length is equal\n    return oldData.datasets.length === newData.datasets.length && newDatasetLabels.every((value, index)=>value === oldDatasetLabels[index]\n    );\n}\nconst templateError = \"Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components\";\n\nconst ANNOTATION_PLUGIN_KEY = \"annotation\";\nfunction generateChart(chartId, chartType, chartController) {\n    let _chartRef = null;\n    return {\n        props: {\n            chartData: {\n                type: Object,\n                required: true\n            },\n            chartOptions: {\n                type: Object,\n                default: ()=>{}\n            },\n            datasetIdKey: {\n                type: String,\n                default: \"label\"\n            },\n            chartId: {\n                type: String,\n                default: chartId\n            },\n            width: {\n                type: Number,\n                default: 400\n            },\n            height: {\n                type: Number,\n                default: 400\n            },\n            cssClasses: {\n                type: String,\n                default: \"\"\n            },\n            styles: {\n                type: Object,\n                default: ()=>{}\n            },\n            plugins: {\n                type: Array,\n                default: ()=>[]\n            }\n        },\n        data () {\n            return {\n                _chart: null\n            };\n        },\n        computed: {\n            hasAnnotationPlugin () {\n                var ref, ref1;\n                const pluginSettings = (ref = this.chartOptions) === null || ref === void 0 ? void 0 : (ref1 = ref.plugins) === null || ref1 === void 0 ? void 0 : ref1[ANNOTATION_PLUGIN_KEY];\n                return typeof pluginSettings !== \"undefined\";\n            }\n        },\n        created () {\n            Chart.register(chartController);\n        },\n        mounted () {\n            _chartRef = {\n                current: null\n            };\n            if (\"datasets\" in this.chartData && this.chartData.datasets.length > 0) {\n                chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                this.$emit(ChartEmits.ChartRendered);\n            }\n        },\n        watch: {\n            chartData: {\n                handler: function(newValue, oldValue) {\n                    this.chartDataHandler(newValue, oldValue);\n                },\n                deep: true\n            },\n            chartOptions: {\n                handler: function(newValue) {\n                    this.chartOptionsHandler(newValue);\n                },\n                deep: true\n            }\n        },\n        methods: {\n            renderChart (data, options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    chartDestroy(currentChart);\n                    this.$emit(ChartEmits.ChartDestroyed);\n                }\n                if (!this.$refs.canvas) {\n                    throw new Error(templateError);\n                } else {\n                    const chartData = getChartData(data, this.datasetIdKey);\n                    const canvasEl2DContext = this.$refs.canvas.getContext(\"2d\");\n                    if (canvasEl2DContext !== null) {\n                        this.setCurrentChart(new Chart(canvasEl2DContext, {\n                            type: chartType,\n                            data: chartData,\n                            options,\n                            plugins: this.plugins\n                        }));\n                    }\n                }\n            },\n            chartDataHandler (newValue, oldValue) {\n                const newData = {\n                    ...newValue\n                };\n                const oldData = {\n                    ...oldValue\n                };\n                const currentChart = this.getCurrentChart();\n                if (Object.keys(oldData).length > 0) {\n                    const isEqualLabelsAndDatasetsLength = compareData(newData, oldData);\n                    if (isEqualLabelsAndDatasetsLength && currentChart !== null) {\n                        setChartDatasets(currentChart.data, newData, this.datasetIdKey);\n                        if (newData.labels !== undefined) {\n                            setChartLabels(currentChart, newData.labels);\n                            this.$emit(ChartEmits.LabelsUpdated);\n                        }\n                        this.updateChart();\n                        this.$emit(ChartEmits.ChartUpdated);\n                    } else {\n                        if (currentChart !== null) {\n                            chartDestroy(currentChart);\n                            this.$emit(ChartEmits.ChartDestroyed);\n                        }\n                        chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                        this.$emit(ChartEmits.ChartRendered);\n                    }\n                } else {\n                    if (currentChart !== null) {\n                        chartDestroy(currentChart);\n                        this.$emit(ChartEmits.ChartDestroyed);\n                    }\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                    this.$emit(ChartEmits.ChartRendered);\n                }\n            },\n            chartOptionsHandler (options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    setChartOptions(currentChart, options);\n                    this.updateChart();\n                } else {\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                }\n            },\n            updateChart () {\n                const currentChart = this.getCurrentChart();\n                chartUpdate(currentChart);\n            },\n            getCurrentChart () {\n                return this.hasAnnotationPlugin ? _chartRef.current : this.$data._chart;\n            },\n            setCurrentChart (chart) {\n                this.hasAnnotationPlugin ? _chartRef.current = chart : this.$data._chart = chart;\n            }\n        },\n        beforeDestroy () {\n            const currentChart = this.getCurrentChart();\n            if (currentChart !== null) {\n                chartDestroy(currentChart);\n                this.$emit(ChartEmits.ChartDestroyed);\n            }\n        },\n        render: function(createElement) {\n            return createElement(\"div\", {\n                style: this.styles,\n                class: this.cssClasses\n            }, [\n                createElement(\"canvas\", {\n                    attrs: {\n                        id: this.chartId,\n                        width: this.width,\n                        height: this.height\n                    },\n                    ref: \"canvas\"\n                })\n            ]);\n        }\n    };\n}\n/** @type Object */ const Bar = /* #__PURE__ */ generateChart(\"bar-chart\", \"bar\", BarController);\n/** @type Object */ const Doughnut = /* #__PURE__ */ generateChart(\"doughnut-chart\", \"doughnut\", DoughnutController);\n/** @type Object */ const Line = /* #__PURE__ */ generateChart(\"line-chart\", \"line\", LineController);\n/** @type Object */ const Pie = /* #__PURE__ */ generateChart(\"pie-chart\", \"pie\", PieController);\n/** @type Object */ const PolarArea = /* #__PURE__ */ generateChart(\"polar-chart\", \"polarArea\", PolarAreaController);\n/** @type Object */ const Radar = /* #__PURE__ */ generateChart(\"radar-chart\", \"radar\", RadarController);\n/** @type Object */ const Bubble = /* #__PURE__ */ generateChart(\"bubble-chart\", \"bubble\", BubbleController);\n/** @type Object */ const Scatter = /* #__PURE__ */ generateChart(\"scatter-chart\", \"scatter\", ScatterController);\n\nexport { Bar, Bubble, Doughnut, Line, Pie, PolarArea, Radar, Scatter, generateChart };\n//# sourceMappingURL=index.js.map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Doughnut',{attrs:{\"chartOptions\":_vm.chartOptions,\"chart-data\":_vm.chartData,\"chart-id\":_vm.chartId,\"dataset-id-key\":_vm.datasetIdKey,\"plugins\":_vm.plugins,\"css-classes\":_vm.cssClasses,\"styles\":_vm.styles,\"width\":_vm.width,\"height\":_vm.height}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<Doughnut\n\t\t:chartOptions=\"chartOptions\"\n\t\t:chart-data=\"chartData\"\n\t\t:chart-id=\"chartId\"\n\t    :dataset-id-key=\"datasetIdKey\"\n\t    :plugins=\"plugins\"\n\t    :css-classes=\"cssClasses\"\n\t    :styles=\"styles\"\n\t    :width=\"width\"\n\t    :height=\"height\"\n\t/>\n</template>\n\n<script>\nimport { Doughnut } from 'vue-chartjs/legacy'\nimport {\n\tChart as ChartJS,\n\tTitle,\n\tTooltip,\n\tLegend,\n\tArcElement,\n\tCategoryScale\n} from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, ArcElement, CategoryScale)\n\nexport default {\n\tname: 'DonutChart',\n\tcomponents: { Doughnut },\n\tprops: {\n\t\tchartId: {\n\t\t\ttype: String,\n\t\t\tdefault: 'donut-chart'\n\t\t},\n\t\tdatasetIdKey: {\n\t\t\ttype: String,\n\t\t\tdefault: 'label'\n\t\t},\n\t\twidth: {\n\t\t\ttype: Number,\n\t\t\tdefault: 400\n\t\t},\n\t\theight: {\n\t\t\ttype: Number,\n\t\t\tdefault: 400\n\t\t},\n\t\tcssClasses: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t},\n\t\tstyles: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => {}\n\t\t},\n\t\tplugins: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t},\n\t\tlabels:{\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t},\n\t\tdatasets: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t},\n\t\tcolors: {\n\t\t\ttype: Array,\n\t\t\tdefault: ['#896789', '#789a98']\n\t\t}\n\t},\n\tdata: () => ({\n\t\tchartData: {\n\t\t\tlabels : ['Laki-laki','Perempuan'],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tbackgroundColor: [],\n\t\t\t\t\tdata: []\n\t\t\t\t}\n\t\t\t],\n\t\t},\n\t\tchartOptions: {\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false\n\t\t}\n\t}),\n\tmounted() {\n\t\tthis.chartData.labels = this.labels\n\t\tthis.chartData.datasets[0].data = this.datasets\n\t\tthis.chartData.datasets[0].backgroundColor = this.colors\n\t}\n}\n\n</script>","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DonutChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DonutChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DonutChart.vue?vue&type=template&id=00ae5167&\"\nimport script from \"./DonutChart.vue?vue&type=script&lang=js&\"\nexport * from \"./DonutChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","noop","uid","id","isNullOrUndef","value","isArray","type","Object","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","rgbParse","Color","constructor","ret","this","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","split","set","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","grouped","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","_args","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","ChartEmits","chartCreate","createChartFunction","chartData","chartOptions","emit","ChartRendered","chartDestroy","ChartDestroyed","setChartDatasets","oldData","newData","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","generateChart","chartId","chartType","chartController","_chartRef","required","default","cssClasses","computed","hasAnnotationPlugin","ref","ref1","created","mounted","renderChart","$emit","watch","newValue","oldValue","chartDataHandler","deep","chartOptionsHandler","methods","currentChart","getCurrentChart","$refs","nextData","getChartData","canvasEl2DContext","setCurrentChart","isEqualLabelsAndDatasetsLength","newDatasetLabels","oldDatasetLabels","every","compareData","LabelsUpdated","updateChart","ChartUpdated","setChartOptions","$data","beforeDestroy","createElement","class","attrs","Bar","Doughnut","ChartJS","components","_vm","_h","$createElement","_self","_c"],"sourceRoot":""}